/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    group = 'de.uniba.sme.bambirds'
    repositories {
        // Use jcenter for resolving dependencies.
        // You can declare any Maven/Ivy/file repository here.
        jcenter()
        mavenCentral()
    }

    dependencies {
        implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'
        implementation 'org.apache.commons:commons-lang3:3.9'

        // Use JUnit test framework
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
        testImplementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
        testImplementation 'org.seleniumhq.selenium:selenium-chrome-driver:3.141.59'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
        reports {
            csv.enabled true
        }
    }

    checkstyle {
        if (System.getenv().CHECKSTYLE_SHOW_FAILURES != "true") {
            ignoreFailures true
        }
    }

    jar {
        manifest {
            attributes 'Main-Class': 'de.uniba.sme.bambirds.BamBirds', 'Implementation-Version': version
        }
    }
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.1-jre'

    implementation project(':common')
    implementation project(':vision')
    implementation project(':client')
    implementation project(':level_selection')
    implementation project(path: ':planner', configuration: 'default')
    implementation project(path: ':planner', configuration: 'prolog')
    
}

startScripts {

    doLast {
        def unixScriptFile    = file getUnixScript()
        def windowsScriptfile = file getWindowsScript()
        unixScriptFile.text  = unixScriptFile.text.replace('APP_NAME=', '# Set logfile to the production default\nBAMBIRDS_OPTS="$BAMBIRDS_OPTS -Dlog4j2.configurationFile=$APP_HOME/conf/log4j2.properties"\n\nAPP_NAME=')
        windowsScriptfile.text = windowsScriptfile.text.replace('set APP_HOME=%DIRNAME%..', 'set APP_HOME=%DIRNAME%..\n\n@rem Set logfile to the production default\nset BAMBIRDS_OPTS=%BAMBIRDS_OPTS% -Dlog4j2.configurationFile="%APP_HOME%/conf/log4j2.properties"')
    }
}

application {
    // Define the main class for the application.
    mainClassName = 'de.uniba.sme.bambirds.BamBirds'
}

distributions {
    main {
        contents {
            from 'doc/Team Descriptions/team_description_2021.md'
        }
    }
}

project(':vision') {
    dependencies {
        implementation project(':common')
    }
}

project(':client') {
    dependencies {
        implementation project(':common')
    }
}

project(':planner') {
    dependencies {
        implementation project(':common')
        implementation project(path: ':planner:behind_the_corner', configuration: 'prolog')
    }
}

project(':level_selection') {
    dependencies {
        implementation project(':common')
    }
}

project(':debugging') {
    dependencies {
        implementation project(':common')
        implementation project(':vision')
        implementation project(':client')
        implementation project(':planner')
        implementation project(':level_selection')
    }
}
